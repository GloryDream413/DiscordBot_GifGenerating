import discord
import os
import asyncio
import replicate
import urllib.request
import messages

os.environ['REPLICATE_API_TOKEN'] = '57b5717e8632693a79f0747038512564a640764c'
client = discord.Client(intents=discord.Intents.all())
PREFIX = "/imagine"

@client.event
async def on_ready():
    print(
        'I am ready for listening.'
    )

@client.event
async def on_message(message):
    if message.author == client.user:
        return

    if message.content.startswith(PREFIX + " "):
        await handle_input (message)

async def handle_input(message):
    print (message.content)
    prompt = message.content.split(PREFIX + " ")[1]
    if prompt.strip() == "":
        return

    username = message.author.id
    model = replicate.models.get("andreasjansson/stable-diffusion-animation")

    version = model.versions.get(
        "ca1f5e306e5721e19c473e0d094e6603f0456fe759c10715fcd6c1b79242d4a5")

    inputs = {
        'width': 512,
        'height': 512,
        'prompt_end' : 'a panda swim',
        'num_animation_frames' : 10,
        'num_interpolation_steps' : 5,
        'gif_frames_per_second' : 20,
        'guidance_scale' :7.5,
        'gif_ping_pong' : False,
        'film_interpolation' : True,
        'intermediate_output' : False,
        'output_format' : 'gif'
    }
    inputs['prompt_start'] = prompt
    wait_m = await message.channel.send(messages.message["/wait"])
    prediction = replicate.predictions.create(version=version, input=inputs)
    output = []
    while prediction.status == 'processing' or prediction.status == 'starting':
        prediction.reload()
        print (prediction.status)

        if prediction.status == "failed":
            break

        if prediction.status == 'succeeded':
            output = prediction.output
            break
        await asyncio.sleep(5)

    if len(output) == 0:
        return
    
    generated_image_url = output[0]
    print(generated_image_url)
    urllib.request.urlretrieve(generated_image_url, f"images/{username}.gif")
    photo = open(f"images/{username}.png", "rb")
    await wait_m.delete()
    embed = discord.Embed(title=f"{prompt}\nAn Image Generated by @{message.author}\n\n", color=9699539)
    embed.set_author(
        name=f"{message.author}",
    )
    file = discord.File(photo, 'image.jpg')
    embed.set_image (url=f"attachment://images/{username}.gif")
    embed.set_thumbnail(url=f"attachment://images/{username}.gif")
    await message.channel.send(file=file, embed=embed)

client.run('MTA3OTY1MDkyNDA5NzcyMDM0Mg.GhBdjz.b1NTpAFtydJx5MCtO8c1h1Exp7JbHXpj2rOEts')